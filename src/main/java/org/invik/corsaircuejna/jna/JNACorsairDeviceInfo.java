package org.invik.corsaircuejna.jna;
import org.invik.corsaircuejna.jna.CorsairCUEJNAWrapperLibrary.CorsairDeviceType;
import org.invik.corsaircuejna.jna.CorsairCUEJNAWrapperLibrary.CorsairLogicalLayout;
import org.invik.corsaircuejna.jna.CorsairCUEJNAWrapperLibrary.CorsairPhysicalLayout;
import org.bridj.BridJ;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * contains information about device<br>
 * <i>native declaration : include\CUESDK.h:72</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("CorsairCUEJNAWrapper.x64_2013")
public class JNACorsairDeviceInfo extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * enum describing device type<br>
	 * C type : CorsairDeviceType
	 */
	@Field(0) 
	public IntValuedEnum<CorsairDeviceType > type() {
		return this.io.getEnumField(this, 0);
	}
	/**
	 * enum describing device type<br>
	 * C type : CorsairDeviceType
	 */
	@Field(0) 
	public JNACorsairDeviceInfo type(IntValuedEnum<CorsairDeviceType > type) {
		this.io.setEnumField(this, 0, type);
		return this;
	}
	/**
	 * null - terminated device model(like \u00e2\u20ac\u0153K95RGB\u00e2\u20ac\ufffd)<br>
	 * C type : const char*
	 */
	@Field(1) 
	public Pointer<Byte > model() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * null - terminated device model(like \u00e2\u20ac\u0153K95RGB\u00e2\u20ac\ufffd)<br>
	 * C type : const char*
	 */
	@Field(1) 
	public JNACorsairDeviceInfo model(Pointer<Byte > model) {
		this.io.setPointerField(this, 1, model);
		return this;
	}
	/**
	 * enum describing physical layout of the keyboard or mouse<br>
	 * C type : CorsairPhysicalLayout
	 */
	@Field(2) 
	public IntValuedEnum<CorsairPhysicalLayout > physicalLayout() {
		return this.io.getEnumField(this, 2);
	}
	/**
	 * enum describing physical layout of the keyboard or mouse<br>
	 * C type : CorsairPhysicalLayout
	 */
	@Field(2) 
	public JNACorsairDeviceInfo physicalLayout(IntValuedEnum<CorsairPhysicalLayout > physicalLayout) {
		this.io.setEnumField(this, 2, physicalLayout);
		return this;
	}
	/**
	 * enum describing logical layout of the keyboard as set in CUE settings<br>
	 * C type : CorsairLogicalLayout
	 */
	@Field(3) 
	public IntValuedEnum<CorsairLogicalLayout > logicalLayout() {
		return this.io.getEnumField(this, 3);
	}
	/**
	 * enum describing logical layout of the keyboard as set in CUE settings<br>
	 * C type : CorsairLogicalLayout
	 */
	@Field(3) 
	public JNACorsairDeviceInfo logicalLayout(IntValuedEnum<CorsairLogicalLayout > logicalLayout) {
		this.io.setEnumField(this, 3, logicalLayout);
		return this;
	}
	/** mask that describes device capabilities, formed as logical \u00e2\u20ac\u0153or\u00e2\u20ac\ufffd of CorsairDeviceCaps enum values */
	@Field(4) 
	public int capsMask() {
		return this.io.getIntField(this, 4);
	}
	/** mask that describes device capabilities, formed as logical \u00e2\u20ac\u0153or\u00e2\u20ac\ufffd of CorsairDeviceCaps enum values */
	@Field(4) 
	public JNACorsairDeviceInfo capsMask(int capsMask) {
		this.io.setIntField(this, 4, capsMask);
		return this;
	}
	/** number of controllable LEDs on the device */
	@Field(5) 
	public int ledsCount() {
		return this.io.getIntField(this, 5);
	}
	/** number of controllable LEDs on the device */
	@Field(5) 
	public JNACorsairDeviceInfo ledsCount(int ledsCount) {
		this.io.setIntField(this, 5, ledsCount);
		return this;
	}
	public JNACorsairDeviceInfo() {
		super();
	}
	public JNACorsairDeviceInfo(Pointer pointer) {
		super(pointer);
	}
}
